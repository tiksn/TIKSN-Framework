name: CICD

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

permissions: read-all

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  ci:
    name: CI
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: "Install .NET Core SDK"
        uses: actions/setup-dotnet@v4.0.1
      - name: Install .NET MAUI
        run: dotnet workload install maui
      - name: "Install InvokeBuild Module"
        shell: pwsh
        run: Install-Module -Name InvokeBuild -Force
      - name: "Restore"
        shell: pwsh
        run: .\restore.ps1 -Instance ${{github.run_id}}
      - name: "Format"
        shell: pwsh
        run: .\format.ps1 -Instance ${{github.run_id}}
      - name: "Version"
        shell: pwsh
        run: .\version.ps1 -Instance ${{github.run_id}}
      - name: "Build"
        shell: pwsh
        run: .\build.ps1 -Instance ${{github.run_id}}
      - name: "Test"
        shell: pwsh
        run: .\test.ps1 -Instance ${{github.run_id}}
      - name: "Pack"
        shell: pwsh
        run: .\pack.ps1 -Instance ${{github.run_id}}
      - name: "Publish Artefacts"
        uses: actions/upload-artifact@v4.4.1
        with:
          name: .trash
          path: ".trash"
          include-hidden-files: true

  cd:
    name: CD
    needs: ci
    if: github.event_name == 'release'
    environment:
      name: "NuGet"
      url: https://www.nuget.org/packages/TIKSN-Framework/
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: "Download Artefact"
        uses: actions/download-artifact@v4.1.8
        with:
          name: .trash
          path: ".trash"
      - name: "Install InvokeBuild Module"
        shell: pwsh
        run: Install-Module -Name InvokeBuild -Force
      - name: "Publish"
        env:
          NUGET_API_KEY: ${{secrets.NUGET_API_KEY}}
        shell: pwsh
        run: .\publish.ps1 -Instance ${{github.run_id}}
